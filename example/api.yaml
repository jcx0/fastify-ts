openapi: 3.1.0
info:
  title: Example API
  version: 0.0.0
servers:
  - url: https://api.example.com/v0
    description: Production server
security:
  - authorization: []
paths:
  /users:
    post:
      summary: Create new user
      operationId: createUser
      requestBody:
        $ref: "#/components/requestBodies/NewUser"
      responses:
        "201":
          $ref: "#/components/responses/User"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "500":
          $ref: "#/components/responses/InternalError"
  /users/{userId}:
    get:
      summary: Get user data of requester
      operationId: getUser
      parameters:
        - $ref: "#/components/parameters/UserId"
      responses:
        "200":
          $ref: "#/components/responses/User"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalError"
components:
  schemas:
    Error:
      type: object
      required:
        - code
      properties:
        code:
          type: string
        message:
          type: string
    User:
      type: object
      required:
        - id
        - birthday
        - email
      properties:
        id:
          type: string
          format: uuid
        birthday:
          type: string
          format: date
        email:
          type: string
          format: email
  parameters:
    UserId:
      name: userId
      in: path
      required: true
      schema:
        type: string
        format: uuid
  responses:
    BadRequest:
      description: Client error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Conflict:
      description: Resource already exists
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Forbidden:
      description: Not authorized to access resource
    InternalError:
      description: Internal service error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: Resource not found
    UnauthorizedError:
      description: Access token is missing or invalid
    User:
      description: User data
      content:
        application/json:
          schema:
            type: object
            required:
              - user
            properties:
              user:
                $ref: "#/components/schemas/User"
  requestBodies:
    NewUser:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - birthday
              - email
            properties:
              birthday:
                type: string
                format: date
              email:
                type: string
                format: email
  securitySchemes:
    authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT
